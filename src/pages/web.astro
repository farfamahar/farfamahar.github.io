---
import BaseHead from '../components/BaseHead.astro';
import Sidebar from '../components/Sidebar.astro';

// This data would typically come from a CMS or API
const apps = [
  {
    name: "Urban Lens",
    images: ["/urban-lens-cover.webp"],
    description: "Created for experimental urban games festival, Playtest Kyoto 2024. Use your phone to capture the textures, materials, and patterns of Kyoto. Urban Lens encourages you to notice the details of the city to create clothing patterns for characters.",
	stack: [ "React", "JavaScript", "TailwindCSS", 'Vite', "Google Firebase Storage","Vercel"],
	link: "https://www.urbanlens.city/"
  },
  {
    name: "Kana Cards",
    images: ["/kanacards.png"],
    description: "Minimal ReactJS web app for practicing and learning Hiragana and Katakana. Features, mnemonic learn mode, audio pronunciation, quiz mode with difficulty levels, quiz filters, and font randomizers.",
	stack: ["React", "JavaScript", "TailwindCSS", 'Vite', "Vercel"],
	link: "https://kana-cards.vercel.app/"

  },

  {
    name: "notice.me",
    images: ["/noticeme.webp"],
    description: "Fullstack photosharing web app that encourages users to notice the world around them. A different photo prompt is provided each day. All photos taken by every user that day can be viewed",
	stack: ["React", "JavaScript", "TailwindCSS", 'Vite', "Vercel", 'Firebase Auth','Firebase Database', 'Firebase Storage'],
	link: ""

  },
  {
    name: "Geotune",
    images: ["/geotune.png"],
    description: "Play a unique tune based on your precise gps location. Change from sine, square, and sawtooth audio waves. Loop your tune. Uses the Web Audio API and Geolocation API.",
	stack: ["JavaScript", "Web Audio API", 'Vite', "Vercel"],
	link: "https://geo-tune.vercel.app/"

  },
  {
    name: "p5.blossom",
    images: ["/cherry-blossom-p5js.png"],
    description: "Generative cherry blossom tree art made using p5.js",
	stack: ["JavaScript", "p5.js", 'Vite', "Vercel"],
	link : "https://generative-art-sandy.vercel.app/"

  }
];
---

<html lang="en">
	<head>
		<BaseHead title="Farfama Apps" description="Web apps by Farfama" />
		<style>
			body {
				font-family: Arial, sans-serif;
				margin: 0;
				padding: 0;
				display: flex;
				font-size: 14px;
				line-height: 1.6;
				color: #333;
				min-height: 100vh;
			}
			.content {
				flex-grow: 1;
				padding: 60px;
				max-width: 1200px;
				margin: 0 auto;
				width: 100%;
				box-sizing: border-box;
			}
			.app-section {
				margin-bottom: 60px;
			}

			.app-title {
				font-size: 24px;
				margin-bottom: 20px;
				font-family: 'Geist-Regular', sans-serif;

			}
			.image-gallery {
				display: flex;
				overflow-x: auto;
				gap: 20px;
				margin-bottom: 20px;
				padding-bottom: 10px;
				-webkit-overflow-scrolling: touch;
			}
			.gallery-item {
				flex: 0 0 auto;
				width: 100%;
				max-width: 533px;
				height: 300px;
			}
			.gallery-video {
				width: 100%;
				height: 100%;
			}
			.gallery-image {
				width: 100%;
				height: 100%;
				object-fit: cover;
			}
			.app-description {
				max-width: 600px;
			}

			.app-link{
				padding-top:12px;
			}
			@media (max-width: 768px) {
				body {
					flex-direction: column;
				}
				.content {
					padding: 20px;
				}
				.app-title {
					font-size: 20px;
				}
				.gallery-item {
					height: 56.25vw; /* 16:9 aspect ratio */
					max-height: 300px;
				}
				.game-description {
					font-size: 14px;
				}
			}
		</style>
	</head>
	<body>
		<Sidebar />
		<div class="content">
			{apps.map((app) => (
				<section class="app-section">
					<h2 class="app-title">{app.name}</h2>
					<div class="image-gallery">
						{/* <div class="gallery-item">
							<iframe
								src={`https://www.youtube.com/embed/${game.videoId}`}
								frameborder="0"
								allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
								allowfullscreen
								class="gallery-video"
							></iframe>
						</div> */}
						{app.images.map((image) => (
							<div class="gallery-item">
								<img src={image} alt={`Screenshot from ${app.name}`} class="gallery-image" />
							</div>
						))}
					</div>
					<p class="app-description">{app.description}</p>

					{app.stack.map((item) => (
					<li class="app-description">{item}</li>
						))}
								{ app.link ? (
					<div class="app-link"> <a href={app.link}>Link</a></div>
					) : (
						''
					)
					}
				</section>
			))}
		</div>
	</body>
</html>